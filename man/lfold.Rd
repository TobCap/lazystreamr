% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/lfold.r
\name{lfold}
\alias{lfold}
\alias{lfoldl}
\alias{lfoldl1}
\alias{lfoldr}
\alias{lfoldr1}
\alias{lscanl}
\alias{lscanl1}
\alias{lscanr}
\alias{lscanr1}
\alias{unfoldr}
\title{fold a lazy stream}
\usage{
lfoldl(x, f, init)

lfoldl1(x, f)

lfoldr(x, f, init)

lfoldr1(x, f)

lscanl(x, f, init)

lscanl1(x, f)

lscanr(x, f, init)

lscanr1(x, f)

unfoldr(x, g)
}
\arguments{
\item{x}{a lazy stream}

\item{f}{function who must takes two areguments}

\item{init}{initial value if needed}

\item{g}{function that takes one argument and returns lcons or quote(Nothing)}
}
\description{
The order of arguments position is different from that of Haskell's
 because it is easy for magrittr's pipe to pass a lazy stream as the first argument.
}
\examples{
lfoldl(1\%..\%10, `+`, 0) # => 55

lfoldl(1\%..\%10, function(x,y) paste0("(",x,"+",y,")"), 0)
# => "((((((((((0+1)+2)+3)+4)+5)+6)+7)+8)+9)+10)"
lfoldr(1\%..\%10, function(x,y) paste0("(",x,"+",y,")"), 0)
# => "(1+(2+(3+(4+(5+(6+(7+(8+(9+(10+0))))))))))"
lscanl(1\%..\%10,`+`, 0) # => llist(0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55)
## library("magrittr")
## liota() \%>\% ltake(10) \%>\% lfoldl1(`+`) # => 45

unfoldr(0, function(x) if (x >= 10) quote(Nothing) else lcons(x, x+1))
}

